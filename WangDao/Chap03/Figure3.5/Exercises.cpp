
// ------------------------------- 王道综合应用题 -------------------------------
/*-------------------------------------------------------------------------
 1. 假设一个算术表达式中包含圆括号、方括号和花括号3种类型的括号，编写一个算法来判别表达式
 中的括号是否配对，以字符"\0"作为算术表达式的结束符。

 LeetCode 20
 ------------------------------------------------------------------------*/
#include <stack>
#include <string>
using namespace std;
class Solution {
private:
    stack<char> st;
public:
    char stackPop() {
        char res = st.top();
        st.pop();
        return res;
    }

    bool isValid(string s) {
        for (char &c: s) {
            if (c == '(') st.push(')');
            else if (c == '[') st.push(']');
            else if (c == '{') st.push('}');
            else if (st.empty() || stackPop() != c) return false;
        }
        return st.empty();
    }
};

/*-------------------------------------------------------------------------
 2. 铁道进行车厢调度(注意，两侧铁道均为单向行驶道，火车调度站有一个用与调度的"栈道")，火车
 调度站的入口处有n节硬座和软座车厢(分别用H和S表示)等待调度，试编写算法，输出对这n节车厢进行
 调度的操作(即入栈或出栈操作)序列，以使所有的软座车厢都被调整到硬座车厢之前。
 ------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------
 3. 利用一个栈实现以下递归函数的非递归计算P_n(x)
 1,  n = 0
 2x, n = 1
 2xP_{n-1}(x) - 2(n-1)P_{n-2}(x), n > 1
 ------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------
 4. 某汽车轮渡口，过江渡船每次能载10辆车过江。过江车辆分别为客车类和货车类，上渡船有如下
 规定: 同类车先到先上船; 客车先于货车上船，且每上4辆客车，才允许放上1辆货车; 若等待客车
 不足4辆，则以货车代替；若无货车等待，允许客车都上船。试设计一个算法模拟渡口管理。
 ------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------
 5. 表达式求值
 LeetCode 150. Evaluate Reverse Polish Notation
 ------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------
 6. 中缀转后缀
 ------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------
 7. 后缀转中缀
 ------------------------------------------------------------------------*/

